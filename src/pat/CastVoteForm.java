/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CastVoteForm.java
 *
 * Created on 16-Feb-2014, 08:38:18
 */

package pat;

import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;


public class CastVoteForm extends MainExtensibleClass  {

    public VotingForm parentCaller;

    /** Creates new form CastVoteForm */
    public CastVoteForm() {
        initComponents();
        this.getConnection();
        this.loadCategories();
    }
    
    public CastVoteForm(VotingForm parentObj) {
        this.parentCaller = parentObj;
        initComponents();
        this.getConnection();
        this.loadCategories();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCategory = new javax.swing.JPanel();
        cboSeleCand = new javax.swing.JComboBox();
        btnCastVote = new javax.swing.JButton();
        cboSelectCategory = new javax.swing.JComboBox();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCategory.setBorder(javax.swing.BorderFactory.createTitledBorder("Presidential"));

        btnCastVote.setText("Cast Vote");
        btnCastVote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCastVoteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lblCategoryLayout = new javax.swing.GroupLayout(lblCategory);
        lblCategory.setLayout(lblCategoryLayout);
        lblCategoryLayout.setHorizontalGroup(
            lblCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblCategoryLayout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addGroup(lblCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblCategoryLayout.createSequentialGroup()
                        .addComponent(cboSeleCand, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblCategoryLayout.createSequentialGroup()
                        .addComponent(btnCastVote)
                        .addGap(97, 97, 97))))
        );
        lblCategoryLayout.setVerticalGroup(
            lblCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblCategoryLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(cboSeleCand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(btnCastVote)
                .addContainerGap())
        );

        cboSelectCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSelectCategoryItemStateChanged(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(cboSelectCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(284, Short.MAX_VALUE)
                .addComponent(btnClose)
                .addGap(273, 273, 273))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnClose)
                .addGap(43, 43, 43))
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(cboSelectCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCastVoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCastVoteActionPerformed
        // TODO add your handling code here:

        try{
            //lets get the voter id
            int id = this.parentCaller.getVoterId();

            if(id>0)
            {
               ArrayList <ListPairItem> arrData = new ArrayList <ListPairItem> ();

                if(this.cboSeleCand.getSelectedItem().toString()==null || this.cboSelectCategory.getSelectedItem().toString()==null ||
                    this.cboSeleCand.getSelectedItem().toString()=="" || this.cboSelectCategory.getSelectedItem().toString()=="")
                {
                    new Alert("Please select your candidate");
                    return;
                }

               //lets check if the voter had voted earlier
               ResultSet rs = this.dbConnection.fetchrows("select * from tbl_voting where (voter_id='"+
                       id+"' and category_id='"+((ListPairItem)this.cboSelectCategory.getSelectedItem()).getItem()+"')");

               if(rs.next())
               {
                   if(rs.getInt(1)>0)
                   {
                       new Alert("You have already casted your vote on this occassion.");
                       return;
                   }
                       
               }
                //lets collate all informatioon supplied for voter
                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                Date date = new Date();
                arrData.add(new ListPairItem ("vote_date",dateFormat.format(date)+""));
                arrData.add(new ListPairItem ("voter_id",""+id));
                arrData.add(new ListPairItem ("choice",((ListPairItem)this.cboSeleCand.getSelectedItem()).getItem()));
                arrData.add(new ListPairItem ("category_id",((ListPairItem)this.cboSelectCategory.getSelectedItem()).getItem()));

                //lets add the information to the database
                this.dbConnection.insertData(arrData, "tbl_voting");
                //int id = this.dbConnection.get_Last_Inserted_ID("tbl_voters");
                
                this.clearFormFields();
                new Alert("Congratulations!!! "+this.parentCaller.getVoterName()+", Your vote was submitted successfully");
                
            }
             else
             {
                new Alert("Voter Not Recognized, You cannot proceed from this point");
             }

            //this.parentCaller.setEnableVote(false);
            //this.setVisible(false);
            //this.parentCaller.setVoterDetail(0);

        }
        catch(Exception ex)
        {
            new Alert("An error occured during vote casting");
        }
    }//GEN-LAST:event_btnCastVoteActionPerformed

    private void cboSelectCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSelectCategoryItemStateChanged
        // TODO add your handling code here:
        this.cboSeleCand.removeAllItems();
        this.lblCategory.setBorder(javax.swing.BorderFactory.createTitledBorder(this.cboSelectCategory.getSelectedItem().toString()));

        ResultSet temp = this.dbConnection.fetchrows("select * "
                + " from tbl_voting_setup where category_id='"+
                ((ListPairItem)this.cboSelectCategory.getSelectedItem()).getItem()+"'");
        
        /**
         * "select A.*,B.fname,B.lname,B.oname,B.title "
                + " from tbl_voting_setup as A left join tbl_candidate as B on (A.candidate_id=B.ID) where A.category_id='"+
                ((ListPairItem)this.cboSelectCategory.getSelectedItem()).getItem()+"'"
         *
         *  ",B.fname,B.lname,B.oname,B.title ";
         */
       
        ArrayList <String> candidate_ids = new ArrayList<String>();
        try{
            while(temp.next())
            {
                candidate_ids.add(temp.getString("candidate_id"));
            }
        }
        catch(Exception ex)
        {

        }

        //LETS COLLATE THE CANDIDATE INFORMATION
        try{
            for(int i=0;i<candidate_ids.size();i++)
            {
                ResultSet temp2 = this.dbConnection.fetchrows("select * "
                + " from tbl_candidate where ID="+candidate_ids.get(i)
                +"");
                temp2.next();
                this.cboSeleCand.addItem(new ListPairItem<String>(temp2.getString("title")
                +" "+temp2.getString("lname")+" "+temp2.getString("fname")
                +" "+temp2.getString("oname"),temp2.getString("ID")));
            }
        }
        catch(Exception ee)
        {

        }
    }//GEN-LAST:event_cboSelectCategoryItemStateChanged

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.hide();
        this.parentCaller.show();
    }//GEN-LAST:event_btnCloseActionPerformed


    private void clearFormFields()
    {
        this.cboSeleCand.removeAllItems();
        this.cboSelectCategory.setSelectedIndex(0);
    }

    private void loadCategories()
    {
        ResultSet temp = this.dbConnection.fetchrows("select * from tbl_category where status='1'");
        try{
            while(temp.next())
            {
                this.cboSelectCategory.addItem(new ListPairItem<String>(temp.getString("category_name"),temp.getString("ID")));
            }
        }
        catch(Exception ex)
        {

        }
    }

    /**
    * @param args the command line arguments
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CastVoteForm().setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCastVote;
    private javax.swing.JButton btnClose;
    private javax.swing.JComboBox cboSeleCand;
    private javax.swing.JComboBox cboSelectCategory;
    private javax.swing.JPanel lblCategory;
    // End of variables declaration//GEN-END:variables

}
