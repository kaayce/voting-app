/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VoteSetupForm.java
 *
 * Created on 21-Feb-2014, 18:52:58
 */

package pat;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.Date;
import javax.swing.DefaultListModel;


public class VoteSetupForm extends MainExtensibleClass {

    String setupId = null;
    /** Creates new form VoteSetupForm */
    public VoteSetupForm() {
        initComponents();
        this.getConnection();
        this.lstSetups.setModel(new DefaultListModel());
       refresh();
    }
    
    public VoteSetupForm(MainMenuForm caller)
    {
         initComponents();
         this.getConnection();
          this.lstSetups.setModel(new DefaultListModel());
         refresh();
         this.parent =caller;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JButton();
        cboCategory = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        cboCandidates = new javax.swing.JComboBox();
        cboStatus = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstSetups = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        cboCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Select Category:");

        jLabel2.setText("Select Candidate:");

        jLabel3.setText("Select Status:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        cboCandidates.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lstSetups.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstSetups);

        jLabel4.setText("Current Setup");

        btnRemove.setText("Remove From Setup");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(208, 208, 208))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(31, 31, 31)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboCandidates, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboCategory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClose, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnRemove))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboCandidates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnClose)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemove)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.hide();
        this.parent.show();
}//GEN-LAST:event_btnCloseActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
         try{
            if(lstSetups.getSelectedValue()!=null){
                String sid = ((ListPairItem)lstSetups.getSelectedValue()).getItem().toString();
                String qry1 = "delete from tbl_voting_setup where ID ="+sid+"";
                this.dbConnection.executeQueryNoDataReturn(qry1);
            }
            new Alert("Setup detail Removed");
            this.loadSetups();

        }
        catch(Exception ex)
        {

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try{
            String category = ((ListPairItem)this.cboCategory.getSelectedItem()).getItem().toString();
            String candidate = ((ListPairItem)this.cboCandidates.getSelectedItem()).getItem().toString();
            String Status = ((ListPairItem)this.cboStatus.getSelectedItem()).getItem().toString();
             ArrayList <ListPairItem> arrData = new ArrayList <ListPairItem> ();

             arrData.add(new ListPairItem ("candidate_id",category));
            arrData.add(new ListPairItem ("category_id",candidate));
            arrData.add(new ListPairItem ("Status",Status));

            if(setupId==null || setupId.trim().equalsIgnoreCase(""))
            {//user is new


                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                Date date = new Date();
                arrData.add(new ListPairItem ("creation_date",dateFormat.format(date)+""));

                //lets add the information to the database
                this.dbConnection.insertData(arrData, "tbl_voting_setup");
                new Alert("Setup Added Successfully");
            }
             else
             {//user already exist
                this.dbConnection.updatetable(arrData, "tbl_voting_setup","ID="+this.setupId+"");
                new Alert("Setup Modified Successfully");
             }
            refresh();
        }
        catch(Exception ex)
        {
            new Alert("Invalid Input");
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    /**
    * @param args the command line arguments
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VoteSetupForm().setVisible(true);
            }
        });
    }
*/

    private void refresh()
    {
        loadCandidates();
        loadCategory();
        loadStatus();
         loadSetups();
    }
        public void loadSetups()
        {
            DefaultListModel listModel = (DefaultListModel) lstSetups.getModel();
            listModel.removeAllElements();
            String qry1 = "select * from tbl_voting_setup";
            ResultSet tempRS = this.dbConnection.fetchrows(qry1);
            try{
                while(tempRS.next())
                {
                    String candID = tempRS.getString("ID");

                    String temp = this.getCandidateName(tempRS.getString("candidate_id"))
                            + " ("+this.getCategoryName(tempRS.getString("category_id")) +") "
                            +this.getStatusName(tempRS.getString("status"));

                     listModel.addElement(new ListPairItem (temp,candID));
                }
                lstSetups.setModel(listModel);
            }
            catch(Exception ex)
            {
                System.err.println(ex.toString());
            }
             setupId = null;
        }

        public void loadCandidates()
        {
            String qry1 = "select * from tbl_candidate";
            ResultSet tempRS = this.dbConnection.fetchrows(qry1);
            this.cboCandidates.removeAllItems();
            try{
                while(tempRS.next())
                {
                    String candID = tempRS.getString("ID");

                    String temp = tempRS.getString("fname")+" "
                            + ""+tempRS.getString("lname")
                            + " ("+this.getGroupName(tempRS.getString("group_id")) +") ";
                    this.cboCandidates.addItem(new ListPairItem(temp, candID));
                }
            }
            catch(Exception ex)
            {
                System.err.println(ex.toString());
            }
            
        }
        public void loadCategory()
        {
            this.cboCategory.removeAllItems();
            String qry1 = "select * from tbl_category";
            ResultSet tempRS = this.dbConnection.fetchrows(qry1);
            this.cboCategory.removeAllItems();
            try{
                while(tempRS.next())
                {
                    String categID = tempRS.getString("ID");

                    String temp = tempRS.getString("category_name");
                    this.cboCategory.addItem(new ListPairItem(temp, categID));
                }
            }
            catch(Exception ex)
            {
                System.err.println(ex.toString());
            }

        }
        public void loadStatus()
        {
            this.cboStatus.removeAllItems();
            this.cboStatus.addItem(new ListPairItem("Active", "1"));
            this.cboStatus.addItem(new ListPairItem("In-Active", "0"));
        }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cboCandidates;
    private javax.swing.JComboBox cboCategory;
    private javax.swing.JComboBox cboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstSetups;
    // End of variables declaration//GEN-END:variables

}
